services:
  nginx:
    image: nginx:1.27.1
    container_name: nginx
    ports:
      - "5678:80"
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - type: bind
        source: "./nginx.conf"
        target: "/etc/nginx/nginx.conf"
        read_only: true
    depends_on:
      - api
      # - prism
      - swagger
      - redoc
      - pgweb

  api:
    container_name: api
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Asia/Tokyo
    build:
      context: .
      target: final
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:16.4
    container_name: db
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chronotes
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=Asia/Tokyo
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgweb:
    image: sosedoff/pgweb:0.16.1
    container_name: pgweb
    ports:
      - "8081:8081"
    environment:
      - PGWEB_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/chronotes?sslmode=disable
      - TZ=Asia/Tokyo
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7.4.0
    container_name: redis
    volumes:
      - redis-data:/data
    environment:
      - TZ=Asia/Tokyo
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  swagger:
    image: swaggerapi/swagger-ui:v5.17.14
    container_name: swagger
    environment:
      - SWAGGER_JSON=/tmp/api/bundled.yaml
      - TZ=Asia/Tokyo
    volumes:
      - type: bind
        source: "docs/api/bundled.yaml"
        target: "/tmp/api/bundled.yaml"
        read_only: true

  redoc:
    image: redocly/redoc:v2.1.5
    container_name: redoc
    ports:
      - "3032:80"
    environment:
      - SPEC_URL=/redoc/openapi/bundled.yaml
      - TZ=Asia/Tokyo
    volumes:
      - type: bind
        source: "docs/api/bundled.yaml"
        target: "/usr/share/nginx/html/openapi/bundled.yaml"
        read_only: true

  # prism:
  #   image: stoplight/prism:5.11.2
  #   command: "mock -h 0.0.0.0 /tmp/api/openapi.yaml"
  #   environment:
  #     - TZ=Asia/Tokyo
  #   volumes:
  #     - type: bind
  #       source: "docs/api"
  #       target: "/tmp/api"
  #       read_only: true

volumes:
  db-data:
  redis-data:
