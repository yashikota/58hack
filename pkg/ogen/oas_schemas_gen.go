// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/AddTagsRequest
type AddTagsRequest struct {
	Tags []string `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *AddTagsRequest) GetTags() []string {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *AddTagsRequest) SetTags(val []string) {
	s.Tags = val
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// ConnectServiceNoContent is response for ConnectService operation.
type ConnectServiceNoContent struct{}

// Ref: #/components/schemas/CreateNoteRequest
type CreateNoteRequest struct {
	Title   string   `json:"title"`
	Content string   `json:"content"`
	Tags    []string `json:"tags"`
	Images  []Image  `json:"images"`
	IsDraft OptBool  `json:"isDraft"`
}

// GetTitle returns the value of Title.
func (s *CreateNoteRequest) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *CreateNoteRequest) GetContent() string {
	return s.Content
}

// GetTags returns the value of Tags.
func (s *CreateNoteRequest) GetTags() []string {
	return s.Tags
}

// GetImages returns the value of Images.
func (s *CreateNoteRequest) GetImages() []Image {
	return s.Images
}

// GetIsDraft returns the value of IsDraft.
func (s *CreateNoteRequest) GetIsDraft() OptBool {
	return s.IsDraft
}

// SetTitle sets the value of Title.
func (s *CreateNoteRequest) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *CreateNoteRequest) SetContent(val string) {
	s.Content = val
}

// SetTags sets the value of Tags.
func (s *CreateNoteRequest) SetTags(val []string) {
	s.Tags = val
}

// SetImages sets the value of Images.
func (s *CreateNoteRequest) SetImages(val []Image) {
	s.Images = val
}

// SetIsDraft sets the value of IsDraft.
func (s *CreateNoteRequest) SetIsDraft(val OptBool) {
	s.IsDraft = val
}

// DeleteNoteNoContent is response for DeleteNote operation.
type DeleteNoteNoContent struct{}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

// DisconnectServiceNoContent is response for DisconnectService operation.
type DisconnectServiceNoContent struct{}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorResponse) SetMessage(val string) {
	s.Message = val
}

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

// Ref: #/components/schemas/GetAllTagsResponse
type GetAllTagsResponse struct {
	Tags []string `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *GetAllTagsResponse) GetTags() []string {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *GetAllTagsResponse) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/GetNotesResponse
type GetNotesResponse struct {
	Notes      []Note `json:"notes"`
	TotalCount int32  `json:"totalCount"`
}

// GetNotes returns the value of Notes.
func (s *GetNotesResponse) GetNotes() []Note {
	return s.Notes
}

// GetTotalCount returns the value of TotalCount.
func (s *GetNotesResponse) GetTotalCount() int32 {
	return s.TotalCount
}

// SetNotes sets the value of Notes.
func (s *GetNotesResponse) SetNotes(val []Note) {
	s.Notes = val
}

// SetTotalCount sets the value of TotalCount.
func (s *GetNotesResponse) SetTotalCount(val int32) {
	s.TotalCount = val
}

// Ref: #/components/schemas/GetTagAnalyticsResponse
type GetTagAnalyticsResponse struct {
	Tags []TagAnalytics `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *GetTagAnalyticsResponse) GetTags() []TagAnalytics {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *GetTagAnalyticsResponse) SetTags(val []TagAnalytics) {
	s.Tags = val
}

// Ref: #/components/schemas/Image
type Image struct {
	ID  string `json:"id"`
	URL string `json:"url"`
}

// GetID returns the value of ID.
func (s *Image) GetID() string {
	return s.ID
}

// GetURL returns the value of URL.
func (s *Image) GetURL() string {
	return s.URL
}

// SetID sets the value of ID.
func (s *Image) SetID(val string) {
	s.ID = val
}

// SetURL sets the value of URL.
func (s *Image) SetURL(val string) {
	s.URL = val
}

// Ref: #/components/schemas/IntegrationService
type IntegrationService struct {
	ServiceName string    `json:"serviceName"`
	IsConnected bool      `json:"isConnected"`
	Data        OptString `json:"data"`
}

// GetServiceName returns the value of ServiceName.
func (s *IntegrationService) GetServiceName() string {
	return s.ServiceName
}

// GetIsConnected returns the value of IsConnected.
func (s *IntegrationService) GetIsConnected() bool {
	return s.IsConnected
}

// GetData returns the value of Data.
func (s *IntegrationService) GetData() OptString {
	return s.Data
}

// SetServiceName sets the value of ServiceName.
func (s *IntegrationService) SetServiceName(val string) {
	s.ServiceName = val
}

// SetIsConnected sets the value of IsConnected.
func (s *IntegrationService) SetIsConnected(val bool) {
	s.IsConnected = val
}

// SetData sets the value of Data.
func (s *IntegrationService) SetData(val OptString) {
	s.Data = val
}

// Ref: #/components/schemas/LoginRequest
type LoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *LoginRequest) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *LoginRequest) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *LoginRequest) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *LoginRequest) SetPassword(val string) {
	s.Password = val
}

// LogoutNoContent is response for Logout operation.
type LogoutNoContent struct{}

// Ref: #/components/schemas/Note
type Note struct {
	ID        string    `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	Tags      []string  `json:"tags"`
	Images    []Image   `json:"images"`
	IsDraft   bool      `json:"isDraft"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// GetID returns the value of ID.
func (s *Note) GetID() string {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Note) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *Note) GetContent() string {
	return s.Content
}

// GetTags returns the value of Tags.
func (s *Note) GetTags() []string {
	return s.Tags
}

// GetImages returns the value of Images.
func (s *Note) GetImages() []Image {
	return s.Images
}

// GetIsDraft returns the value of IsDraft.
func (s *Note) GetIsDraft() bool {
	return s.IsDraft
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Note) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Note) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Note) SetID(val string) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Note) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *Note) SetContent(val string) {
	s.Content = val
}

// SetTags sets the value of Tags.
func (s *Note) SetTags(val []string) {
	s.Tags = val
}

// SetImages sets the value of Images.
func (s *Note) SetImages(val []Image) {
	s.Images = val
}

// SetIsDraft sets the value of IsDraft.
func (s *Note) SetIsDraft(val bool) {
	s.IsDraft = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Note) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Note) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/NoteSummary
type NoteSummary struct {
	Count int32  `json:"count"`
	Notes []Note `json:"notes"`
}

// GetCount returns the value of Count.
func (s *NoteSummary) GetCount() int32 {
	return s.Count
}

// GetNotes returns the value of Notes.
func (s *NoteSummary) GetNotes() []Note {
	return s.Notes
}

// SetCount sets the value of Count.
func (s *NoteSummary) SetCount(val int32) {
	s.Count = val
}

// SetNotes sets the value of Notes.
func (s *NoteSummary) SetNotes(val []Note) {
	s.Notes = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/RegisterUserRequest
type RegisterUserRequest struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *RegisterUserRequest) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *RegisterUserRequest) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *RegisterUserRequest) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *RegisterUserRequest) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *RegisterUserRequest) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *RegisterUserRequest) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/RegisterUserResponse
type RegisterUserResponse struct {
	User  User   `json:"user"`
	Token string `json:"token"`
}

// GetUser returns the value of User.
func (s *RegisterUserResponse) GetUser() User {
	return s.User
}

// GetToken returns the value of Token.
func (s *RegisterUserResponse) GetToken() string {
	return s.Token
}

// SetUser sets the value of User.
func (s *RegisterUserResponse) SetUser(val User) {
	s.User = val
}

// SetToken sets the value of Token.
func (s *RegisterUserResponse) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/SearchNotesResponse
type SearchNotesResponse struct {
	Notes []Note `json:"notes"`
}

// GetNotes returns the value of Notes.
func (s *SearchNotesResponse) GetNotes() []Note {
	return s.Notes
}

// SetNotes sets the value of Notes.
func (s *SearchNotesResponse) SetNotes(val []Note) {
	s.Notes = val
}

// ShareNoteNoContent is response for ShareNote operation.
type ShareNoteNoContent struct{}

// Ref: #/components/schemas/ShareNoteRequest
type ShareNoteRequest struct {
	ShareWith string `json:"shareWith"`
}

// GetShareWith returns the value of ShareWith.
func (s *ShareNoteRequest) GetShareWith() string {
	return s.ShareWith
}

// SetShareWith sets the value of ShareWith.
func (s *ShareNoteRequest) SetShareWith(val string) {
	s.ShareWith = val
}

// Ref: #/components/schemas/TagAnalytics
type TagAnalytics struct {
	Tag   string `json:"tag"`
	Count int32  `json:"count"`
}

// GetTag returns the value of Tag.
func (s *TagAnalytics) GetTag() string {
	return s.Tag
}

// GetCount returns the value of Count.
func (s *TagAnalytics) GetCount() int32 {
	return s.Count
}

// SetTag sets the value of Tag.
func (s *TagAnalytics) SetTag(val string) {
	s.Tag = val
}

// SetCount sets the value of Count.
func (s *TagAnalytics) SetCount(val int32) {
	s.Count = val
}

// UnshareNoteNoContent is response for UnshareNote operation.
type UnshareNoteNoContent struct{}

// Ref: #/components/schemas/UpdateNoteRequest
type UpdateNoteRequest struct {
	Title   OptString `json:"title"`
	Content OptString `json:"content"`
	Tags    []string  `json:"tags"`
	Images  []Image   `json:"images"`
	IsDraft OptBool   `json:"isDraft"`
}

// GetTitle returns the value of Title.
func (s *UpdateNoteRequest) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *UpdateNoteRequest) GetContent() OptString {
	return s.Content
}

// GetTags returns the value of Tags.
func (s *UpdateNoteRequest) GetTags() []string {
	return s.Tags
}

// GetImages returns the value of Images.
func (s *UpdateNoteRequest) GetImages() []Image {
	return s.Images
}

// GetIsDraft returns the value of IsDraft.
func (s *UpdateNoteRequest) GetIsDraft() OptBool {
	return s.IsDraft
}

// SetTitle sets the value of Title.
func (s *UpdateNoteRequest) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *UpdateNoteRequest) SetContent(val OptString) {
	s.Content = val
}

// SetTags sets the value of Tags.
func (s *UpdateNoteRequest) SetTags(val []string) {
	s.Tags = val
}

// SetImages sets the value of Images.
func (s *UpdateNoteRequest) SetImages(val []Image) {
	s.Images = val
}

// SetIsDraft sets the value of IsDraft.
func (s *UpdateNoteRequest) SetIsDraft(val OptBool) {
	s.IsDraft = val
}

// Ref: #/components/schemas/UploadImageRequest
type UploadImageRequest struct {
	Image Image `json:"image"`
}

// GetImage returns the value of Image.
func (s *UploadImageRequest) GetImage() Image {
	return s.Image
}

// SetImage sets the value of Image.
func (s *UploadImageRequest) SetImage(val Image) {
	s.Image = val
}

// Ref: #/components/schemas/User
type User struct {
	ID        string    `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	CreatedAt time.Time `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *User) GetID() string {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *User) SetID(val string) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}
